name: "release"

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        channel: [ '21.11' ]
        os: [ ubuntu-latest, macos-latest ]
        include:
          - os: ubuntu-latest
            name: linux
            prefix: nixos
          - os: macos-latest
            name: darwin
            prefix: nixpkgs
          - channel: '21.11'
            channel-darwin: '21.11-darwin'

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: cachix/install-nix-action@v17
      with:
        nix_path: nixpkgs=channel:${{ matrix.prefix }}-${{ matrix.channel }}
      if: contains(matrix.os, 'ubuntu')

    - uses: cachix/install-nix-action@v17
      with:
        nix_path: nixpkgs=channel:${{ matrix.prefix }}-${{ matrix.channel-darwin }}
      if: contains(matrix.os, 'macos')

    - uses: cachix/cachix-action@v10
      with:
        name: ninegua
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix-build --pure release.nix

    - run: nix-env -f '<nixpkgs>' -iA gnutar gnused

    - name: Pack dfx-env
      run: |
        export version=$(echo ${{ github.ref }} | cut -d/ -f3)
        export ostype=${{ matrix.name }}
        export arch=x86_64
        export dir=dfx-env-$version
        mkdir $dir
        sed -e "s/^  version = .*/  version = \"$version\";/" \
            -e "s/^  ostype = .*/  ostype = \"$ostype\";/" \
            -e "s/^  arch = .*/  arch = \"$arch\";/" dfx-env.nix > $dir/default.nix
        tar -zcvf $dir.tar.gz $dir
      if: contains(matrix.os, 'ubuntu')

    - name: Pack binaries
      run: |
        tar --version
        export name=ic-binaries-$(echo ${{ github.ref }} | cut -d/ -f3)
        tar -zcv -C $(nix-build --pure release.nix --no-out-link -A binaries) --transform "s,^.,$name," -f $name-${{ matrix.name }}-x86_64.tar.gz .

    - name: Pack canisters
      run: |
        export name=ic-canisters-$(echo ${{ github.ref }} | cut -d/ -f3)
        tar -zcv -C $(nix-build --pure release.nix --no-out-link -A canisters) --transform "s,^.,$name," -f $name-wasm32.tar.gz .
      if: contains(matrix.os, 'ubuntu')

    - name: Upload dfx-env
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: dfx-env-*.tar.gz
        file_glob: true
      if: contains(matrix.os, 'ubuntu')

    - name: Upload binaries
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: ic-binaries-*.tar.gz
        file_glob: true

    - name: Upload canisters
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: ic-canisters-*.tar.gz
        file_glob: true
      if: contains(matrix.os, 'ubuntu')

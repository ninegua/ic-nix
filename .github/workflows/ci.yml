name: "ci"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  warmup:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        channel: [ '23.05' ]
        os: [ ubuntu-latest, macos-latest, macos-14 ]
        include:
          - os: ubuntu-latest
            prefix: nixos
          - os: macos-latest
            prefix: nixpkgs
          - os: macos-14
            prefix: nixpkgs
          - channel: '23.05'
            channel-darwin: '23.05-darwin'

    steps:
    - uses: actions/checkout@v3

    - uses: cachix/install-nix-action@v23
      with:
        nix_path: nixpkgs=channel:${{ matrix.prefix }}-${{ matrix.channel }}
      if: contains(matrix.os, 'ubuntu')

    - uses: cachix/install-nix-action@v23
      with:
        nix_path: nixpkgs=channel:${{ matrix.prefix }}-${{ matrix.channel-darwin }}
      if: contains(matrix.os, 'macos')

    - name: nix cache warm up
      uses: cachix/cachix-action@v12
      with:
        name: ninegua
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix-build --pure --keep-going -A deps
  
  build:
    needs: warmup
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        project: [ 'motoko', 'ic-no-shell', 'sdk', 'utils' ]
        channel: [ '23.05' ]
        os: [ ubuntu-latest, macos-latest, macos-14 ]
        include:
          - os: ubuntu-latest
            prefix: nixos
            name: linux
          - os: macos-latest
            prefix: nixpkgs
            name: darwin
          - os: macos-14
            prefix: nixpkgs
            name: darwin
          - channel: '23.05'
            channel-darwin: '23.05-darwin'

    steps:
    - name: Maximize build space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        df -h
      if: contains(matrix.os, 'ubuntu')

    - uses: actions/checkout@v3

    - uses: cachix/install-nix-action@v24
      with:
        nix_path: nixpkgs=channel:${{ matrix.prefix }}-${{ matrix.channel }}
      if: contains(matrix.os, 'ubuntu')

    - uses: cachix/install-nix-action@v24
      with:
        nix_path: nixpkgs=channel:${{ matrix.prefix }}-${{ matrix.channel-darwin }}
      if: contains(matrix.os, 'macos')

    - name: nix build
      uses: cachix/cachix-action@v12
      with:
        name: ninegua
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix-build --pure --keep-going -A ${{ matrix.project }}
